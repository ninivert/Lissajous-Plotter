{"version":3,"sources":["../../src/scripts/draw.js"],"names":["draw","ctx","clearRect","CLRX","CLRY","CLRW","CLRH","updateCircles","drawCircles","drawNodes","drawPlot","NEXTFRAME","requestAnimationFrame","c","i","COUNT","CIRCLES","angle","speed","projx","RADIUS","Math","cos","projy","sin","strokeStyle","color","lineWidth","beginPath","arc","x","y","PI","stroke","fillStyle","NODERADIUS","fill","c1","c2","rgb","j","map","floor","toString","join","SPACING","UNIT"],"mappings":"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","file":"draw.js","sourcesContent":["function draw() {\r\n\t// Clear both horizontal and vertical circles\r\n\tctx.clearRect(CLRX, CLRY, CLRW, CLRH)\r\n\tctx.clearRect(CLRY, CLRX, CLRH, CLRW)\r\n\r\n\t// Update\r\n\tupdateCircles()\r\n\r\n\t// Drawing\r\n\tdrawCircles()\r\n\tdrawNodes()\r\n\tdrawPlot()\r\n\r\n\tNEXTFRAME = requestAnimationFrame(draw)\r\n}\r\n\r\n\r\nfunction updateCircles() {\r\n\tlet c\r\n\r\n\tfor (let i=0; i<COUNT; ++i) {\r\n\t\tc = CIRCLES[i]\r\n\t\tc.angle += c.speed\r\n\t\tc.projx = RADIUS*Math.cos(c.angle)\r\n\t\tc.projy = RADIUS*Math.sin(c.angle)\r\n\t}\r\n}\r\n\r\n\r\nfunction drawCircles() {\r\n\tlet c\r\n\r\n\tfor (let i=0; i<COUNT; ++i) {\r\n\t\tc = CIRCLES[i]\r\n\t\tctx.strokeStyle = c.color\r\n\t\tctx.lineWidth = 2\r\n\t\t\r\n\t\t// Horizontally\r\n\t\tctx.beginPath()\r\n\t\tctx.arc(c.x, c.y, RADIUS, 0, 2*Math.PI)\r\n\t\tctx.stroke()\r\n\t\t// Vertically\r\n\t\tctx.beginPath()\r\n\t\tctx.arc(c.y, c.x, RADIUS, 0, 2*Math.PI)\r\n\t\tctx.stroke()\r\n\t}\r\n}\r\n\r\n\r\nfunction drawNodes() {\r\n\tlet c\r\n\r\n\tfor (let i=0; i<COUNT; ++i) {\r\n\t\tc = CIRCLES[i]\r\n\t\tctx.fillStyle = c.color\r\n\r\n\t\t// Horizontal nodes\r\n\t\tctx.beginPath()\r\n\t\tctx.arc(c.x+c.projx, c.y+c.projy, NODERADIUS, 0, 2*Math.PI)\r\n\t\tctx.fill()\r\n\t\t// Vertical nodes\r\n\t\tctx.beginPath()\r\n\t\tctx.arc(c.y+c.projx, c.x+c.projy, NODERADIUS, 0, 2*Math.PI)\r\n\t\tctx.fill()\r\n\t}\r\n}\r\n\r\n\r\nfunction drawPlot() {\r\n\tlet c1, c2, rgb\r\n\r\n\tfor (let i=0; i<COUNT; ++i) {\r\n\t\tc1 = CIRCLES[i]\r\n\r\n\t\tfor (let j=0; j<COUNT; ++j) {\r\n\t\t\tc2 = CIRCLES[j]\r\n\r\n\t\t\t// Take the average of the colors\r\n\t\t\tlet rgb = c1.rgb.map((x, i) => Math.floor((c1.rgb[i] + c2.rgb[i])/2).toString(16))\r\n\t\t\tctx.fillStyle = '#' + rgb.join('')\r\n\r\n\t\t\tctx.beginPath()\r\n\t\t\tctx.arc(SPACING + RADIUS + UNIT*(i+1) + c1.projx, SPACING + RADIUS + UNIT*(j+1) + c2.projy, 1, 0, 2*Math.PI)\r\n\t\t\tctx.fill()\r\n\t\t}\r\n\r\n\t}\r\n}"]}